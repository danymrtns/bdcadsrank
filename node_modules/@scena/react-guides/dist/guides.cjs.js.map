{"version":3,"file":"guides.cjs.js","sources":["../src/react-guides/utils.ts","../src/react-guides/consts.ts","../src/react-guides/Guides.tsx","../src/react-guides/index.umd.ts"],"sourcesContent":["import { prefixNames } from \"framework-utils\";\n\nexport function prefix(...classNames: string[]) {\n    return prefixNames(\"scena-\", ...classNames);\n}\n","import { prefix } from \"./utils\";\nimport { prefixCSS } from \"framework-utils\";\nimport { GuidesOptions } from \"./types\";\nimport { PROPERTIES as RULER_PROPERTIES } from \"@scena/react-ruler\";\n\nexport const RULER = prefix(\"ruler\");\nexport const ADDER = prefix(\"guide\", \"adder\");\nexport const GUIDES = prefix(\"guides\");\nexport const GUIDE = prefix(\"guide\");\nexport const DRAGGING = prefix(\"dragging\");\nexport const DISPLAY_DRAG = prefix(\"display-drag\");\nexport const GUIDES_CSS = prefixCSS(\"scena-\", `\n{\n    position: relative;\n    width: 100%;\n    height: 100%;\n}\ncanvas {\n    position: relative;\n}\n.guide-origin {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    top: 0;\n    left: 0;\n    opacity: 0;\n}\n.guides {\n    position: absolute;\n    top: 0;\n    left: 0;\n    will-change: transform;\n    z-index: 2000;\n}\n.display-drag {\n    position: absolute;\n    will-change: transform;\n    z-index: 2000;\n    font-weight: bold;\n    font-size: 12px;\n    display: none;\n    left: 20px;\n    top: -20px;\n    color: #f33;\n}\n:host.horizontal .guides {\n    width: 100%;\n    height: 0;\n    top: 30px;\n}\n:host.vertical .guides {\n    height: 100%;\n    width: 0;\n    left: 30px;\n}\n.guide {\n    position: absolute;\n    background: #f33;\n    z-index: 2;\n}\n.guide.dragging:before {\n    position: absolute;\n    content: \"\";\n    width: 100%;\n    height: 100%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n:host.horizontal .guide {\n    width: 100%;\n    height: 1px;\n    cursor: row-resize;\n}\n:host.vertical .guide {\n    width: 1px;\n    height: 100%;\n    cursor: col-resize;\n}\n.mobile :host.horizontal .guide {\n    transform: scale(1, 2);\n}\n.mobile :host.vertical .guide {\n    transform: scale(2, 1);\n}\n:host.horizontal .guide:before {\n    height: 20px;\n}\n:host.vertical .guide:before {\n    width: 20px;\n}\n.adder {\n    display: none;\n}\n.adder.dragging {\n    display: block;\n}\n`);\n\nexport const PROPERTIES: Array<keyof GuidesOptions> = [\n    \"className\",\n    \"rulerStyle\",\n    'snapThreshold',\n    \"snaps\",\n    \"displayDragPos\",\n    \"cspNonce\",\n    'dragPosFormat',\n    \"defaultGuides\",\n    \"showGuides\",\n    ...RULER_PROPERTIES,\n];\n\nexport const METHODS = [\n    \"getGuides\",\n    \"loadGuides\",\n    \"scroll\",\n    \"scrollGuides\",\n    \"resize\",\n] as const;\n\nexport const EVENTS = [\n    \"changeGuides\",\n    \"dragStart\",\n    \"drag\",\n    \"dragEnd\",\n] as const;\n","import * as React from \"react\";\nimport Ruler, { PROPERTIES as RULER_PROPERTIES, RulerProps } from \"@scena/react-ruler\";\nimport { ref, refs } from \"framework-utils\";\nimport Gesto, { OnDragEnd } from \"gesto\";\nimport styled, { StyledElement } from \"react-css-styled\";\nimport { GUIDES, GUIDE, DRAGGING, ADDER, DISPLAY_DRAG, GUIDES_CSS } from \"./consts\";\nimport { prefix } from \"./utils\";\nimport { hasClass, addClass, removeClass } from \"@daybrush/utils\";\nimport { GuidesState, GuidesProps, GuidesInterface } from \"./types\";\nimport { getDistElementMatrix, calculateMatrixDist } from \"css-to-mat\";\n\nconst GuidesElement = styled(\"div\", GUIDES_CSS);\n\nexport default class Guides extends React.PureComponent<GuidesProps, GuidesState> implements GuidesInterface {\n    public static defaultProps: GuidesProps = {\n        className: \"\",\n        type: \"horizontal\",\n        zoom: 1,\n        style: {},\n        snapThreshold: 5,\n        snaps: [],\n        digit: 0,\n        onChangeGuides: () => { },\n        onDragStart: () => { },\n        onDrag: () => { },\n        onDragEnd: () => { },\n        displayDragPos: false,\n        dragPosFormat: v => v,\n        defaultGuides: [],\n        lockGuides: false,\n        showGuides: true,\n        guideStyle: {},\n        dragGuideStyle: {},\n        portalContainer: null,\n    };\n    public state: GuidesState = {\n        guides: [],\n    };\n    public adderElement!: HTMLElement;\n    public scrollPos: number = 0;\n    public ruler!: Ruler;\n    private manager!: StyledElement<HTMLElement>;\n    private guidesElement!: HTMLElement;\n    private displayElement!: HTMLElement;\n    private originElement!: HTMLElement;\n    private gesto!: Gesto;\n    private guideElements: HTMLElement[] = [];\n\n    public render() {\n        const {\n            className,\n            type,\n            zoom,\n            style,\n            rulerStyle,\n            displayDragPos,\n            cspNonce,\n            dragGuideStyle,\n            portalContainer,\n        } = this.props as Required<GuidesProps>;\n        const props = this.props;\n        const translateName = this.getTranslateName();\n\n\n        const rulerProps: RulerProps = {};\n\n        RULER_PROPERTIES.forEach(name => {\n            if (name === \"style\") {\n                return;\n            }\n            (rulerProps as any)[name] = props[name];\n        });\n        return <GuidesElement\n            ref={ref(this, \"manager\")}\n            cspNonce={cspNonce}\n            className={`${prefix(\"manager\", type)} ${className}`}\n            portalContainer={portalContainer}\n            style={style}\n        >\n            <div className={prefix(\"guide-origin\")} ref={ref(this, \"originElement\")}></div>\n            <Ruler\n                ref={ref(this, \"ruler\")}\n                style={rulerStyle}\n                {...rulerProps}\n            />\n            <div className={GUIDES} ref={ref(this, \"guidesElement\")} style={{\n                transform: `${translateName}(${-this.scrollPos * zoom}px)`,\n            }}>\n                {displayDragPos && <div className={DISPLAY_DRAG}\n                    ref={ref(this, \"displayElement\")} style={dragGuideStyle} />}\n                <div className={ADDER} ref={ref(this, \"adderElement\")} />\n                {this.renderGuides()}\n            </div>\n        </GuidesElement>;\n    }\n    public renderGuides() {\n        const {\n            type,\n            zoom,\n            showGuides,\n            guideStyle,\n        } = this.props as Required<GuidesProps>;\n        const translateName = this.getTranslateName();\n        const guides = this.state.guides;\n\n        this.guideElements = [];\n        if (showGuides) {\n            return guides.map((pos, i) => {\n                return (<div className={prefix(\"guide\", type)}\n                    ref={refs(this, \"guideElements\", i)}\n                    key={i}\n                    data-index={i}\n                    data-pos={pos}\n                    style={{\n                        ...guideStyle,\n                        transform: `${translateName}(${pos * zoom}px) translateZ(0px)`,\n                    }}></div>);\n            });\n        }\n        return;\n    }\n    public componentDidMount() {\n        this.gesto = new Gesto(this.manager.getElement(), {\n            container: document.body,\n        }).on(\"dragStart\", e => {\n            const {\n                type,\n                zoom,\n                lockGuides,\n            } = this.props;\n\n            if (lockGuides === true) {\n                e.stop();\n                return;\n            }\n            const inputEvent = e.inputEvent;\n            const target = inputEvent.target;\n            const datas = e.datas;\n            const canvasElement = this.ruler.canvasElement;\n            const guidesElement = this.guidesElement;\n            const isHorizontal = type === \"horizontal\";\n            const originRect = this.originElement.getBoundingClientRect();\n            const matrix = getDistElementMatrix(this.manager.getElement());\n            const offsetPos = calculateMatrixDist(matrix, [\n                e.clientX - originRect.left,\n                e.clientY - originRect.top,\n            ]);\n            offsetPos[0] -= guidesElement.offsetLeft;\n            offsetPos[1] -= guidesElement.offsetTop;\n            offsetPos[isHorizontal ? 1 : 0] += this.scrollPos * zoom!;\n\n            datas.offsetPos = offsetPos;\n            datas.matrix = matrix;\n\n            let isLockAdd = lockGuides && lockGuides.indexOf(\"add\") > -1;\n            let isLockRemove = lockGuides && lockGuides.indexOf(\"remove\") > -1;\n            let isLockChange = lockGuides && lockGuides.indexOf(\"change\") > -1;\n\n            if (target === canvasElement) {\n                if (isLockAdd) {\n                    e.stop();\n                    return;\n                }\n                datas.fromRuler = true;\n                datas.target = this.adderElement;\n                // add\n            } else if (hasClass(target, GUIDE)) {\n                if (isLockRemove && isLockChange) {\n                    e.stop();\n                    return;\n                }\n                datas.target = target;\n                // change\n            } else {\n                e.stop();\n                return false;\n            }\n            this.onDragStart(e);\n        }).on(\"drag\", this.onDrag).on(\"dragEnd\", this.onDragEnd);\n        this.setState({ guides: this.props.defaultGuides || [] }); // pass array of guides on mount data to create gridlines or something like that in ui\n    }\n    public componentWillUnmount() {\n        this.gesto.unset();\n    }\n    public componentDidUpdate(prevProps: any) {\n        if (prevProps.defaultGuides !== this.props.defaultGuides) {\n            // to dynamically update guides from code rather than dragging guidelines\n            this.setState({ guides: this.props.defaultGuides || [] });\n        }\n    }\n    /**\n     * Load the current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public loadGuides(guides: number[]) {\n        this.setState({\n            guides,\n        });\n    }\n    /**\n     * Get current guidelines.\n     * @memberof Guides\n     * @instance\n     */\n    public getGuides(): number[] {\n        return this.state.guides;\n    }\n    /**\n     * Scroll the positions of the guidelines opposite the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scrollGuides(pos: number) {\n        const { zoom } = this.props as Required<GuidesProps>;\n        const guidesElement = this.guidesElement;\n\n        this.scrollPos = pos;\n        guidesElement.style.transform = `${this.getTranslateName()}(${-pos * zoom}px)`;\n\n        const guides = this.state.guides;\n        this.guideElements.forEach((el, i) => {\n            if (!el) {\n                return;\n            }\n            el.style.display = -pos + guides[i] < 0 ? \"none\" : \"block\";\n        });\n    }\n    /**\n     * Recalculate the size of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public resize() {\n        this.ruler.resize();\n    }\n    /**\n     * Scroll the position of the ruler.\n     * @memberof Guides\n     * @instance\n     */\n    public scroll(pos: number) {\n        this.ruler.scroll(pos);\n    }\n    private onDragStart = (e: any) => {\n        const { datas, inputEvent } = e;\n        const { onDragStart } = this.props;\n\n        addClass(datas.target, DRAGGING);\n        this.onDrag(e);\n\n        /**\n         * When the drag starts, the dragStart event is called.\n         * @memberof Guides\n         * @event dragStart\n         * @param {OnDragStart} - Parameters for the dragStart event\n         */\n        onDragStart!({\n            ...e,\n            dragElement: datas.target,\n        });\n        inputEvent.stopPropagation();\n        inputEvent.preventDefault();\n    }\n    private onDrag = (e: any) => {\n        const nextPos = this.movePos(e);\n\n        /**\n         * When dragging, the drag event is called.\n         * @memberof Guides\n         * @event drag\n         * @param {OnDrag} - Parameters for the drag event\n         */\n        this.props.onDrag!({\n            ...e,\n            dragElement: e.datas.target,\n        });\n        return nextPos;\n    }\n    private onDragEnd = (e: OnDragEnd) => {\n        const { datas, isDouble, distX, distY } = e;\n        const pos = this.movePos(e);\n        let guides = this.state.guides;\n        const { onChangeGuides, zoom, displayDragPos, digit, lockGuides } = this.props;\n        const guidePos = parseFloat((pos / zoom!).toFixed(digit || 0));\n\n        if (displayDragPos) {\n            this.displayElement.style.cssText += `display: none;`;\n        }\n        removeClass(datas.target, DRAGGING);\n        /**\n         * When the drag finishes, the dragEnd event is called.\n         * @memberof Guides\n         * @event dragEnd\n         * @param {OnDragEnd} - Parameters for the dragEnd event\n         */\n        this.props.onDragEnd!({\n            ...e,\n            dragElement: datas.target,\n        });\n        /**\n        * The `changeGuides` event occurs when the guideline is added / removed / changed.\n        * @memberof Guides\n        * @event changeGuides\n        * @param {OnChangeGuides} - Parameters for the changeGuides event\n        */\n        if (datas.fromRuler) {\n            if (pos >= this.scrollPos && guides.indexOf(guidePos) < 0) {\n                this.setState({\n                    guides: [...guides, guidePos],\n                }, () => {\n                    onChangeGuides!({\n                        guides: this.state.guides,\n                        distX,\n                        distY,\n                        isAdd: true,\n                        isRemove: false,\n                        isChange: false,\n                    });\n                });\n            }\n        } else {\n            const index = datas.target.getAttribute(\"data-index\");\n            let isRemove = false;\n            let isChange = false;\n\n            guides = [...guides];\n\n            if (isDouble || guidePos < this.scrollPos) {\n                if (lockGuides && (lockGuides === true || lockGuides.indexOf(\"remove\") > -1)) {\n                    return;\n                }\n                guides.splice(index, 1);\n                isRemove = true;\n            } else if (guides.indexOf(guidePos) > -1) {\n                return;\n            } else {\n                if (lockGuides && (lockGuides === true || lockGuides.indexOf(\"change\") > -1)) {\n                    return;\n                }\n                guides[index] = guidePos;\n                isChange = true;\n            }\n            this.setState({\n                guides,\n            }, () => {\n                const nextGuides = this.state.guides;\n                onChangeGuides!({\n                    distX,\n                    distY,\n                    guides: nextGuides,\n                    isAdd: false,\n                    isChange,\n                    isRemove,\n                });\n            });\n        }\n    }\n    private movePos(e: any) {\n        const { datas, distX, distY } = e;\n        const props = this.props;\n        const {\n            type, zoom, snaps, snapThreshold,\n            displayDragPos,\n            digit,\n        } = props;\n        const dragPosFormat = props.dragPosFormat || (v => v);\n        const isHorizontal = type === \"horizontal\";\n        const matrixPos = calculateMatrixDist(datas.matrix, [distX, distY]);\n        const offsetPos = datas.offsetPos;\n        const offsetX = matrixPos[0] + offsetPos[0];\n        const offsetY = matrixPos[1] + offsetPos[1];\n        let nextPos = Math.round(isHorizontal ? offsetY : offsetX);\n        let guidePos = parseFloat((nextPos / zoom!).toFixed(digit || 0));\n        const guideSnaps = snaps!.slice().sort((a, b) => {\n            return Math.abs(guidePos - a) - Math.abs(guidePos - b);\n        });\n\n        if (guideSnaps.length && Math.abs(guideSnaps[0] * zoom! - nextPos) < snapThreshold!) {\n            guidePos = guideSnaps[0];\n            nextPos = guidePos * zoom!;\n        }\n        if (displayDragPos) {\n            const displayPos = type === \"horizontal\"\n                ? [offsetX, nextPos]\n                : [nextPos, offsetY];\n            this.displayElement.style.cssText += `display: block;`\n                + `transform: translate(-50%, -50%) `\n                + `translate(${displayPos.map(v => `${v}px`).join(\", \")})`;\n            this.displayElement.innerHTML = `${dragPosFormat!(guidePos)}`;\n        }\n        datas.target.setAttribute(\"data-pos\", guidePos);\n        datas.target.style.transform = `${this.getTranslateName()}(${nextPos}px)`;\n\n        return nextPos;\n\n    }\n    private getTranslateName() {\n        return this.props.type === \"horizontal\" ? \"translateY\" : \"translateX\";\n    }\n}\n","import Guides, * as others from \"./index.esm\";\n\nfor (const name in others) {\n    (Guides as any)[name] = (others as any)[name];\n}\nexport default Guides;\n"],"names":["prefix","_i","classNames","prefixNames","RULER","ADDER","GUIDES","GUIDE","DRAGGING","DISPLAY_DRAG","GUIDES_CSS","prefixCSS","PROPERTIES","RULER_PROPERTIES","METHODS","EVENTS","GuidesElement","styled","tslib_1","_this","guides","e","datas","inputEvent","onDragStart","addClass","target","onDrag","dragElement","stopPropagation","preventDefault","nextPos","movePos","props","isDouble","distX","distY","pos","state","_a","onChangeGuides","zoom","displayDragPos","digit","lockGuides","guidePos","parseFloat","toFixed","displayElement","style","cssText","removeClass","onDragEnd","fromRuler","scrollPos","indexOf","setState","isAdd","isRemove","isChange","index","getAttribute","isRemove_1","isChange_1","splice","nextGuides","className","type","rulerStyle","cspNonce","dragGuideStyle","portalContainer","translateName","getTranslateName","rulerProps","forEach","name","React","ref","Ruler","transform","renderGuides","showGuides","guideStyle","guideElements","map","i","refs","key","gesto","Gesto","manager","getElement","container","document","body","on","stop","canvasElement","ruler","guidesElement","isHorizontal","originRect","originElement","getBoundingClientRect","matrix","getDistElementMatrix","offsetPos","calculateMatrixDist","clientX","left","clientY","top","offsetLeft","offsetTop","isLockAdd","isLockRemove","isLockChange","adderElement","hasClass","defaultGuides","unset","prevProps","el","display","resize","scroll","snaps","snapThreshold","dragPosFormat","v","matrixPos","offsetX","offsetY","Math","round","guideSnaps","slice","sort","a","b","abs","length","displayPos","join","innerHTML","setAttribute","Guides","others"],"mappings":"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"}